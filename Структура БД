Наши БД будут написаны на MySQL, и для этого есть ряд функциональных причин:

1) SQL написан на Си, Swift Написан на Си(правда на Objective-C, но суть та же), идеологически близкие вещи, как следствие,
архитектура(да-да) данного программного обеспечения много в чем схожа. 

2) Это хорошее решение для малых и средних приложений, поскольку повсеместно используется для накатывания на сервер и
хранения информации.

3) Простота поиска информации по данной БД, простой синтаксис, скорость работы и удобство. 

4) Гибкая система, поддерживающая большое количество различных видов таблиц. 

5) Удобная система идентификаторов. 


Вся информация на нашем устройстве хранится в так называемой CoreData, о которой можно почитать ниже:

1) https://habrahabr.ru/post/225727/

2) https://habrahabr.ru/post/303512/

3) https://habrahabr.ru/post/303798/

4) https://habrahabr.ru/post/304586/


Данные статьи являются обязательным минимумом, без которого дальнейшее понимание материала становится практически полностью
невозможным, а главное мучительно трудным. 


Функциональные проблемы

Swift не воспринимает SQL-database. Вот от слова совсем. Это стало основным камнем преткновения, ведь структуры CoreData
и SQLite-DataBase должны быть похожи. Я сидел и долго горевал из-за непонятности, в то время как решение пришло от Влада. 
И оно по-гениальному простое. 


Структура CoreData

В CoreData вся информация хранится в виде объектов, принадлежащих какому-то конкретному классу.

# Заметки на полях - в Java, на которой будет написана Android-версия нашего приложения очень удачно реализованна такая вещь 
как независимый класс и Interface, таким образом, работа с объектами типа данных JSON будет куда удобнее работать, но это уже
ближе к реализации в коде. 

Так вот, у каждого объекта каждого класса есть определенный набор свойств(по сути - дата, название события и тп).
По CoreData мы строим наши timeline-ы. 


Структура SQL-database

У каждого элемента каждой базы данных есть свой индивидуальный идентификатор(так называемый id, 
который автоматически заполянется. Читать - autoincrement) и по этому идентификатору мы можем получить значения из нашей базы.
Все просто. 

# Заметки на полях - вообще, как ни странно, но для Java и Swift мы сделаем одну и ту же базу данных, хотя работа с ней будет 
выстроена совершенно разным образом, хоть и по одному сценарию. Все дело в тотальном различии архитектур языка и СУБД. 



